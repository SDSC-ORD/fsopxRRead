# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: main
  pull_request:
    branches: main

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - name: Test coverage
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package

      - name: Enable Repo on Coveralls
        id: enable_coveralls
        run: |
          curl -s -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -H "Authorization: token $COVERALLS_TOKEN" \
            -d '{"repo": {"service": "github","name": "'$GITHUB_REPOSITORY'"}}' \
            -X POST https://coveralls.io/api/repos

      - name: Get Coveralls Repo Token
        id: get_coverall_repo_token
        run: |
          echo "COVERALLS_REPO_TOKEN=$(\
            curl -s -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -H "Authorization: token $COVERALLS_TOKEN" \
            https://coveralls.io/api/repos/github/$GITHUB_REPOSITORY \
            | jq '.token')" >> $GITHUB_ENV

      - name: Generate and Upload R Package Coverage
        run: covr::coveralls(service_name='drone', repo_token=${{ env.COVERALLS_REPO_TOKEN }})
        shell: Rscript {0}
